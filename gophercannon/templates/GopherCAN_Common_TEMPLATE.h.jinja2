#ifndef GOPHERCAN_COMMON_H
#define GOPHERCAN_COMMON_H

// Generated by GopherCANnon

#define GOPHERCAN_HASH {{ repo_hash }}

// Module IDs:
typedef enum
{
    ALL_MODULES_ID = 0,
    {% for module in modules -%}
    {{ module.name }}_ID = {{ module.id }},
    {% endfor %}
} MODULE_ID;

#define NUM_OF_MODULES {{ modules|length }}

// Parameter IDs:
typedef enum
{
    CAN_COMMAND_ID = 0,
    {% for parameter in parameters -%}
    {{ parameter.name.upper() }}_ID = {{ parameter.id }},
    {% endfor %}
} GCAN_PARAM;

#define NUM_OF_PARAMETERS {{ parameters|length }}

// Error IDs:
{% for error in errors -%}
#define {{ error.name.upper() }}_ID = {{ error.id }},
{% endfor %}

// global parameter structs
CAN_COMMAND_STRUCT CAN_COMMAND;
{% for parameter in parameters -%}
{{ parameter.struct.upper() }} {{ parameter.name }},
{% endfor %}

// parameter lookup table
void* all_parameter_structs[NUM_OF_PARAMETERS] =
{
        &can_command,
        {% for parameter in parameters -%}
        &{{ parameter.name }},
        {% endfor %}
};

U8 parameter_data_types[NUM_OF_PARAMETERS] =
{
        COMMAND,
        UNSIGNED16,
        UNSIGNED8,
        UNSIGNED8,
        UNSIGNED16,
        UNSIGNED32,
        UNSIGNED64,
        SIGNED8,
        SIGNED16,
        SIGNED32,
        SIGNED64,
        FLOATING
};

#endif // GOPHERCAN_COMMON_H